{
	"info": {
		"_postman_id": "8ba28db1-f4d0-4991-85af-61b4e6f1ac72",
		"name": "Serverless WouldYouRather",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "QUESTIONs",
			"item": [
				{
					"name": "Get all questions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d7a01f7-f810-4efe-8359-44b9e2d482a9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"The data returned is not null\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.items).to.not.eql(null);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{apiId}}.execute-api.us-east-1.amazonaws.com/dev/questions",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"questions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get question",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a934824f-13d0-42ff-a43d-72602e0093a0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"A single item is returned\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.item).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "https://{{apiId}}.execute-api.us-east-1.amazonaws.com/dev/users/4551045727/questions/91ea0481-e7c3-4b39-83a6-edaf3f2ff46e",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"users",
								"4551045727",
								"questions",
								"91ea0481-e7c3-4b39-83a6-edaf3f2ff46e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create question",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6856acc8-dcc7-41bc-b39b-df5223b4c002",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Returned the new question created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.item.questionId).to.not.eql(null);\r",
									"    pm.expect(jsonData.item.optionOneText).to.eql(\"Go Forward\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"optionOneText\": \"Go Forward\",\n\t\"optionTwoText\": \"Go Backward\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.us-east-1.amazonaws.com/dev/questions",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"questions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create question without Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9ba836c-7f2f-4a7d-9658-3ba1e39c2ed2",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Authorization is explicitly denied\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User is not authorized to access this resource with an explicit deny\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"optionOneText\": \"Go South\",\n\t\"optionTwoText\": \"Go North\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.us-east-1.amazonaws.com/dev/questions",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"questions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create question wrong parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cebf750-7125-4ab7-b182-a088e04da7ed",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Received an error message: Invalid request body\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Invalid request body\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"optionOneText\": 123,\n\t\"optionTwoText\": \"Go North\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.us-east-1.amazonaws.com/dev/questions",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"questions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit Vote: Update question + user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea84ff47-609e-47ef-ae70-046b3f000be5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken2}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"optionSelected\": \"optionTwoVote\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.us-east-1.amazonaws.com/dev/users/4551045727/questions/6ce988e6-941b-4a3f-bff2-e1ae4dfde04e",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"users",
								"4551045727",
								"questions",
								"6ce988e6-941b-4a3f-bff2-e1ae4dfde04e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete question",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b03b732-7fbd-46a4-bb41-2d0dc852d46a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.us-east-1.amazonaws.com/dev/questions/05116265-35d8-448f-a3ca-04b8df3f5e65",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"questions",
								"05116265-35d8-448f-a3ca-04b8df3f5e65"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete question Unauthorized",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken2}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.us-east-1.amazonaws.com/dev/questions/INVALID",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"questions",
								"INVALID"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get attachment URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28e99dc1-102f-486e-8aa2-f04848ac13c5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"It returns an uploadUrl\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.uploadUrl).to.be.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.us-east-1.amazonaws.com/dev/questions/91ea0481-e7c3-4b39-83a6-edaf3f2ff46e/attachment",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"questions",
								"91ea0481-e7c3-4b39-83a6-edaf3f2ff46e",
								"attachment"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "84a28c6e-c448-4116-89c4-a3b49670d7a5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4027bfe3-200b-4c6e-80d9-39a6df7cfd85",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "USERs",
			"item": [
				{
					"name": "Get all responses per user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f581964a-4408-482e-b8aa-44a2b3cb0bc1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"It returns a user object with an 'answers' key\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user[0].answers).to.be.an('object');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "https://{{apiId}}.execute-api.us-east-1.amazonaws.com/dev/users",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9044e1ca-d929-459d-b167-f2ab41acc431",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"It returns a user object with an 'answers' key\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user[0].answers).to.be.an('object');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{apiId}}.execute-api.us-east-1.amazonaws.com/dev/users",
							"protocol": "https",
							"host": [
								"{{apiId}}",
								"execute-api",
								"us-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"dev",
								"users"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "72333e34-7de5-4257-976e-bb4f48cf3517",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "951829ad-2cbd-4d1e-a9f6-8f7f9e745615",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "475503eb-0029-4709-9bc6-e7eb4f43fc22",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "aeb018f3-310e-4113-b162-7a43d91d411b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "45cddb2e-13f9-4f10-b608-7bf63fe7f10c",
			"key": "apiId",
			"value": "xfiw724dof",
			"type": "string"
		},
		{
			"id": "d31feea9-6758-43da-9cfb-622ddc319a28",
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"id": "20b08a2c-9b05-4b7a-9b08-0d5a11b57165",
			"key": "authToken2",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}